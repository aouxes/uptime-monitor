#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <server_ip> [ssh_key]"
    echo "–ü—Ä–∏–º–µ—Ä: $0 192.168.1.100"
    echo "–ü—Ä–∏–º–µ—Ä: $0 192.168.1.100 ~/.ssh/id_rsa"
    exit 1
fi

SERVER_IP=$1
SSH_KEY=${2:-~/.ssh/id_rsa}
APP_NAME="uptime-monitor"
REMOTE_USER="root"

log "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Uptime Monitor –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER_IP"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–ª—é—á–∞
if [ ! -f "$SSH_KEY" ]; then
    error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh -i "$SSH_KEY" -o ConnectTimeout=10 -o BatchMode=yes "$REMOTE_USER@$SERVER_IP" "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" &> /dev/null; then
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
    exit 1
fi

log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "mkdir -p /opt/$APP_NAME"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
log "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -i "$SSH_KEY" -r build/* "$REMOTE_USER@$SERVER_IP:/opt/$APP_NAME/"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
log "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
scp -i "$SSH_KEY" docker-compose.prod.yml "$REMOTE_USER@$SERVER_IP:/opt/$APP_NAME/docker-compose.yml"
scp -i "$SSH_KEY" nginx.conf "$REMOTE_USER@$SERVER_IP:/opt/$APP_NAME/"
scp -i "$SSH_KEY" env.example "$REMOTE_USER@$SERVER_IP:/opt/$APP_NAME/.env.example"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "
    if ! command -v docker &> /dev/null; then
        echo '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker...'
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh
        systemctl enable docker
        systemctl start docker
    else
        echo 'Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    fi
"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
log "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "
    if ! command -v docker-compose &> /dev/null; then
        echo '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose...'
        curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)\" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
    else
        echo 'Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    fi
"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "
    cd /opt/$APP_NAME
    if [ ! -f .env ]; then
        cp .env.example .env
        echo '–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.'
    fi
"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "
    cd /opt/$APP_NAME
    docker-compose down 2>/dev/null || true
    docker-compose up -d
"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
ssh -i "$SSH_KEY" "$REMOTE_USER@$SERVER_IP" "
    cd /opt/$APP_NAME
    docker-compose ps
"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
log "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 10
if curl -f "http://$SERVER_IP:8080/health" &> /dev/null; then
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://$SERVER_IP:8080"
else
    warn "‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "ssh -i $SSH_KEY $REMOTE_USER@$SERVER_IP 'cd /opt/$APP_NAME && docker-compose logs'"
fi

log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
echo "   ssh -i $SSH_KEY $REMOTE_USER@$SERVER_IP 'nano /opt/$APP_NAME/.env'"
echo ""
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
echo ""
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
echo "   ssh -i $SSH_KEY $REMOTE_USER@$SERVER_IP 'cd /opt/$APP_NAME && docker-compose logs -f'"
echo ""
echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è .env:"
echo "   ssh -i $SSH_KEY $REMOTE_USER@$SERVER_IP 'cd /opt/$APP_NAME && docker-compose restart'"
