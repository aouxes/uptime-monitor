# Makefile –¥–ª—è Uptime Monitor

.PHONY: help build run test clean docker-build docker-run deploy

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_NAME=uptime-monitor
DOCKER_IMAGE=uptime-monitor:latest
BUILD_DIR=build

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)Uptime Monitor - –ö–æ–º–∞–Ω–¥—ã —Å–±–æ—Ä–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
	@echo "$(GREEN)üöÄ –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	@./scripts/build.sh

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "$(GREEN)üèÉ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	@go run cmd/server/main.go

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@go test ./...

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–±–æ—Ä–∫–∏
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–±–æ—Ä–∫–∏...$(NC)"
	@rm -rf $(BUILD_DIR)
	@rm -f *.tar.gz *.zip

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(GREEN)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	@docker build -t $(DOCKER_IMAGE) .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Docker
	@echo "$(GREEN)üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	@docker-compose -f deployments/docker-compose.yml up -d

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(GREEN)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	@docker-compose -f deployments/docker-compose.yml down

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(GREEN)üìã –õ–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	@docker-compose -f deployments/docker-compose.yml logs -f

deploy: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Ç—Ä–µ–±—É–µ—Ç SERVER_IP)
	@if [ -z "$(SERVER_IP)" ]; then \
		echo "$(RED)‚ùå –£–∫–∞–∂–∏—Ç–µ SERVER_IP: make deploy SERVER_IP=192.168.1.100$(NC)"; \
		exit 1; \
	fi
	@echo "$(GREEN)üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä $(SERVER_IP)...$(NC)"
	@./scripts/deploy.sh $(SERVER_IP)

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@docker-compose -f deployments/docker-compose.yml up -d postgres
	@echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@sleep 10
	@go run cmd/server/main.go

prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üè≠ –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ä–µ–∂–∏–º–µ...$(NC)"
	@docker-compose -f docker-compose.prod.yml up -d

prod-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(GREEN)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	@docker-compose -f docker-compose.prod.yml down

prod-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(GREEN)üìã –õ–æ–≥–∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	@docker-compose -f docker-compose.prod.yml logs -f

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@go mod download
	@go mod tidy

fmt: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(GREEN)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	@go fmt ./...

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º...$(NC)"
	@if command -v golangci-lint >/dev/null 2>&1; then \
		golangci-lint run; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è golangci-lint –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞.$(NC)"; \
	fi

migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@if [ -f "migrations/apply.go" ]; then \
		go run migrations/apply.go; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è –§–∞–π–ª migrations/apply.go –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π.$(NC)"; \
	fi

backup: ## –°–æ–∑–¥–∞—Ç—å backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@docker exec uptime-monitor-db pg_dump -U monitoruser uptimedb > backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "$(GREEN)‚úÖ Backup —Å–æ–∑–¥–∞–Ω: backup_$(shell date +%Y%m%d_%H%M%S).sql$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose -f deployments/docker-compose.yml ps 2>/dev/null || echo "$(YELLOW)–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	@curl -f http://localhost:8080/health 2>/dev/null && echo "$(GREEN)‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç$(NC)" || echo "$(RED)‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
quick-start: clean install-deps build docker-run ## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (–æ—á–∏—Å—Ç–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–∫–∞, —Å–±–æ—Ä–∫–∞, –∑–∞–ø—É—Å–∫)
	@echo "$(GREEN)üéâ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!$(NC)"
	@echo "$(YELLOW)–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080$(NC)"

quick-deploy: build deploy ## –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (—Å–±–æ—Ä–∫–∞ + —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ)
	@echo "$(GREEN)üéâ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"
